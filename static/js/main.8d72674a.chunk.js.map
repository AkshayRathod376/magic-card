{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","cards","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","setCards","terns","setTerns","choice1","setChoice1","choice2","setChoice2","setDisabled","shuffelCards","sort","Math","random","map","card","id","useEffect","prevCards","resetTerns","setTimeout","console","log","prevTerns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAA+D,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAW9D,OACI,qBAAKC,UAAU,OAAf,SACG,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACG,qBAAKG,IAAKL,EAAMK,IAAKD,UAAU,QAAQE,IAAI,eAC3C,qBAAKD,IAAI,gBACPC,IAAI,YACJF,UAAU,OACVG,QAfO,WAEXJ,GACAF,EAAaD,WCFzB,IAAMQ,EAAa,CACjB,CAAC,IAAM,kBAAmBC,SAAQ,GAClC,CAAC,IAAM,kBAAmBA,SAAQ,GAClC,CAAC,IAAM,gBAAiBA,SAAQ,GAChC,CAAC,IAAM,kBAAmBA,SAAQ,GAClC,CAAC,IAAM,kBAAmBA,SAAQ,GAClC,CAAC,IAAM,iBAAkBA,SAAQ,IA4FpBC,MAzFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA0BD,mBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,mBAAS,MAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,mBAAS,MAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACF,EAAgCP,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBgB,EAAjB,KAESC,EAAc,WAClB,IAAMA,EAAe,UAAIZ,EAAeA,GACvCa,MAAK,kBAAKC,KAAKC,SAAS,MACxBC,KAAI,SAACC,GAAD,mBAAC,eAAYA,GAAb,IAAmBC,GAAIJ,KAAKC,cAEjCP,EAAW,MACXE,EAAW,MACVN,EAASQ,GACTN,EAAS,IAINb,EAAe,SAACwB,GAEpBV,EAAUG,EAAWO,GAAOT,EAAWS,IAKzCE,qBAAU,WACNZ,GAAWE,IACZE,GAAY,GACTJ,EAAQV,MAAMY,EAAQZ,KACvBO,GAAS,SAACgB,GACV,OAAQA,EAAUJ,KAAI,SAAAC,GAClB,OAAGA,EAAKpB,MAAQU,EAAQV,IACf,2BAAIoB,GAAX,IAAiBhB,SAAQ,IAElBgB,QAIbI,KAEAC,YAAW,WAAK,OAAOD,MAAc,QAKvC,CAACd,EAAQE,IAGZU,qBAAU,WACTP,MACE,IAEHW,QAAQC,IAAIhC,GAGZ,IAAM6B,EAAY,WACfb,EAAW,MACXE,EAAW,MACXJ,GAAS,SAACmB,GACR,OAAQA,EAAU,KAEpBd,GAAY,IAIhB,OACE,sBAAKf,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASa,EAAjB,sBAEA,qBAAKhB,UAAU,YAAf,SACGJ,EAAMwB,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CACAzB,MAAQyB,EAERxB,aAAeA,EACfC,QAAUuB,IAASV,GAAWU,IAASR,GAAWQ,EAAKhB,QACvDN,SAAWA,GAHNsB,EAAKC,SAQd,6BAAKb,QC9FXqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8d72674a.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard({cards, handleChoice, flipped, disabled}) {\r\n\r\n\r\n    const handleClick =()=>{\r\n\r\n        if(!disabled){\r\n            handleChoice(cards)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n           <div className={flipped ? \"flipped\" : \"\"} >\r\n              <img src={cards.src} className='front' alt='front-card' />\r\n              <img src=\"img/cover.png\" \r\n                alt='back-card'\r\n                className='back'\r\n                onClick={handleClick} \r\n               />\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport SingleCard from './components/SingleCard';\r\n\r\n\r\n\r\nconst cardImages = [\r\n  {\"src\":\"/img/helmet.png\", matched:false},\r\n  {\"src\":\"/img/potion.png\", matched:false},\r\n  {\"src\":\"/img/ring.png\", matched:false},\r\n  {\"src\":\"/img/scroll.png\", matched:false},\r\n  {\"src\":\"/img/shield.png\", matched:false},\r\n  {\"src\":\"/img/sword.png\", matched:false}\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [cards,setCards]  = useState([]);\r\n  const [terns, setTerns] = useState(0);\r\n  const [choice1, setChoice1] = useState(null);\r\n  const [choice2, setChoice2] = useState(null);\r\nconst [disabled, setDisabled] = useState(false)\r\n   //shuffel cards\r\n   const shuffelCards= ()=>{\r\n     const shuffelCards = [...cardImages, ...cardImages]\r\n     .sort(()=> Math.random()-0.5)\r\n     .map((card)=>({...card, id: Math.random() } ));\r\n\r\n     setChoice1(null);\r\n     setChoice2(null);\r\n      setCards(shuffelCards);\r\n      setTerns(0);\r\n   }\r\n\r\n//handleChoice function\r\n   const handleChoice = (card)=>{\r\n     //choose which card is selected\r\n     choice1 ? setChoice2(card) :setChoice1(card);\r\n\r\n   }\r\n\r\n   //compair two selected cards\r\n   useEffect(() => {\r\n    if(choice1 && choice2){\r\n      setDisabled(true)\r\n      if(choice1.src===choice2.src){\r\n        setCards((prevCards)=>{\r\n        return  prevCards.map(card=>{\r\n            if(card.src === choice1.src){\r\n              return {...card, matched:true};\r\n            }else{\r\n              return card;\r\n            }\r\n          })\r\n        })\r\n        resetTerns();\r\n      }else{\r\n        setTimeout(()=>{return resetTerns()},1000)\r\n      }\r\n\r\n    }\r\n    \r\n   }, [choice1,choice2])\r\n\r\n\r\n   useEffect(() => {\r\n    shuffelCards()\r\n   }, [])\r\n\r\n   console.log(cards);\r\n\r\n   //Resetterms function and increase ter\r\n   const resetTerns =()=>{\r\n      setChoice1(null);\r\n      setChoice2(null);\r\n      setTerns((prevTerns)=>{\r\n        return (prevTerns+1)\r\n      })\r\n      setDisabled(false);\r\n   }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Magic Match</h1>\r\n      <button onClick={shuffelCards}>New Game</button>\r\n\r\n      <div className='card-grid'>\r\n        {cards.map(card=>(\r\n          <SingleCard \r\n          cards ={card} \r\n          key={card.id} \r\n          handleChoice= {handleChoice}\r\n          flipped={ card === choice1 || card === choice2 || card.matched}\r\n          disabled ={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <h1>{terns}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}